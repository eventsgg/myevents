{"version":3,"sources":["Components/SearchBar/SearchBar.tsx","Components/AuthBtn/AuthBtn.tsx","Components/MainMenu/MainMenu.tsx","Components/Header/Header.tsx","Components/EventCard/EventCard.tsx","Models/EventCardModel.tsx","Components/EventCardTileList/EventCardTileList.tsx","Components/ShareModal/ShareModal.tsx","Stores/ShareModalStore.tsx","Components/MainContent/MainContent.tsx","Components/Footer/Footer.tsx","Components/Page/Page.tsx","serviceWorker.js","index.tsx"],"names":["PureSearchBar","react_default","a","createElement","TextField_default","type","variant","label","InputLabelProps","classes","root","this","props","labelRoot","focused","labelFocused","InputProps","outlinedInputRoot","notchedOutline","outlinedInputNotched","outlinedInputFocused","disabled","outlinedInputDisabled","error","outlinedInputError","input","inputRoot","Component","SearchBar","withStyles","color","transform","&$labelFocused","paddingTop","paddingBottom","marginRight","& $outlinedInputNotched, &$outlinedInputFocused $outlinedInputNotched","borderColor","&:hover:not($outlinedInputDisabled):not($outlinedInputFocused):not($outlinedInputError) $outlinedInputNotched","&:hover $outlinedInputNotched","borderWidth","AuthBtn","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","IconButton_default","AccountCircle_default","PureMainMenu","List_default","listRoot","items","map","item","i","ListItem_default","divider","button","ListItemText_default","primary","title","MainMenu","theme","defineProperty","display","breakpoints","down","overflowX","PureHeader","Fragment","AppBar_default","Toolbar_default","Typography_default","className","grow","AuthBtn_AuthBtn","headerShim","mainMenuData","main_menu","Header","flexGrow","position","PureEventCard","inject","observer","shareModalStore","open","_this$props","image","Card_default","style","CardMedia_default","media","src","CardContent_default","CardActions_default","actions","disableActionSpacing","aria-label","Favorite_default","onClick","showShareModal","bind","Share_default","EventCard","height","EventCardModel","EventCardTileList","Grid_default","container","spacing","mix","EventsData","events","eventData","eventCardModel","xs","sm","md","PureShareModal","Dialog_default","onClose","close","DialogTitle_default","disableTypography","titleRoot","closeButtonRoot","Close_default","DialogContent_default","DialogContentText_default","ShareModal","padding","unit","margin","right","top","palette","grey","ShareModalStore","ShareModalStore_class","initializerDefineProperty","_descriptor","set","isOpen","_isOpen","get","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","PureMainContent","children","concat","MainContent","objectSpread","mixins","gutters","Footer","PurePage","pageRoot","layoutVertMargin","layoutHorizMargin","index_module","EventCardTileList_EventCardTileList","Footer_Footer_Footer","Page","overflow","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","mobx_react_devtools_default","CssBaseline_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2812462.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextFileld from '@material-ui/core/TextField';\n\ninterface ISearchBarProps {\n    classes: any\n}\n\nclass PureSearchBar extends Component<ISearchBarProps> {\n    render() {\n        return (\n            <TextFileld\n                type=\"search\"\n                variant=\"outlined\"\n                label=\"Поиск по сайту\"\n                InputLabelProps={{\n                    classes: {\n                        root: this.props.classes.labelRoot,\n                        focused: this.props.classes.labelFocused\n                    }\n                }}\n                InputProps={{\n                    classes: {\n                        root: this.props.classes.outlinedInputRoot,\n                        notchedOutline: this.props.classes.outlinedInputNotched,\n                        focused: this.props.classes.outlinedInputFocused,\n                        disabled: this.props.classes.outlinedInputDisabled,\n                        error: this.props.classes.outlinedInputError,\n                        input: this.props.classes.inputRoot\n                    }\n                }}\n            />\n        )\n    }\n}\n\nconst SearchBar = withStyles({\n    labelRoot: {\n        color: 'rgba(255, 255, 255, .65)',\n        transform: 'translate(14px, 14px) scale(1)',\n        '&$labelFocused': {\n            color: 'white'\n        }\n    },\n    labelFocused: {},\n\n    inputRoot: {\n        color: 'white',\n        paddingTop: '12px',\n        paddingBottom: '12px'\n    },\n\n    outlinedInputRoot: {\n        marginRight: '10px',\n        '& $outlinedInputNotched, &$outlinedInputFocused $outlinedInputNotched': {\n            borderColor: 'white'\n        },\n        '&:hover:not($outlinedInputDisabled):not($outlinedInputFocused):not($outlinedInputError) $outlinedInputNotched': {\n            borderColor: 'white'\n        },\n        '&:hover $outlinedInputNotched': {\n            borderWidth: '2px'\n        }\n    },\n    outlinedInputFocused: {},\n    outlinedInputNotched: {},\n    outlinedInputDisabled: {},\n    outlinedInputError: {}\n})(PureSearchBar);\n\nexport { SearchBar };","import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton'\nimport AuthIcon from '@material-ui/icons/AccountCircle';\n\nexport class AuthBtn extends Component {\n    render() {\n        return (\n            <IconButton color=\"inherit\">\n                <AuthIcon/>\n            </IconButton>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\ninterface IMenuItem { \n    title: string; \n    url: string; \n}\n\ninterface IMainMenuProps {\n    items: IMenuItem[];\n    classes: any\n}\n\nclass PureMainMenu extends Component<IMainMenuProps> {\n    render() {\n        return (\n            <List classes={{ root: this.props.classes.listRoot }}>\n                {\n                    this.props.items.map((item, i) => (\n                        <ListItem divider={true} button key={i}>\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))\n                }\n            </List>\n        );\n\n    }\n}\n\nconst MainMenu = withStyles(theme => ({\n    listRoot: {\n        display: 'flex',\n        [theme.breakpoints.down('xs')]: {\n            overflowX: 'scroll'\n        }\n    }\n}))(PureMainMenu);\n\nexport { MainMenu };","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { AuthBtn } from '../AuthBtn/AuthBtn';\nimport { MainMenu } from '../MainMenu/MainMenu';\nimport mainMenuData from './MainMenuData.json';\n\ninterface IHeaderProps {\n    classes: {\n        grow: string;\n        headerShim: string;\n    }\n}\n\nclass PureHeader extends Component<IHeaderProps> {\n    render() {\n        return (\n            <>\n                <AppBar>\n                    <Toolbar>\n                        <Typography className={this.props.classes.grow} color=\"inherit\" variant=\"headline\">\n                            My events\n                        </Typography>\n\n                        <SearchBar/>\n\n                        <AuthBtn/>\n                    </Toolbar>\n                </AppBar>\n\n                <Toolbar className={this.props.classes.headerShim}/>\n\n                <MainMenu items={mainMenuData.main_menu}/>\n            </>\n        )\n    }\n}\n\nconst Header = withStyles({\n    grow: {\n        flexGrow: 1\n    },\n    headerShim: {\n        position: 'static'\n    }\n})(PureHeader);\n\nexport { Header };","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\n\ninterface IEventCardProps {\n    classes: {\n        media: string;\n        actions: string;\n    };\n    image: {\n      src: string;\n      title: string;\n    };\n    title: string;\n    style?: object;\n    shareModalStore?: any\n}\n\n@inject('shareModalStore')\n@observer class PureEventCard extends Component<IEventCardProps> {\n  showShareModal() {\n    this.props.shareModalStore.open = true;\n  }\n\n  render() {\n    const { classes, image, title } = this.props;\n\n    return (\n      <Card style={this.props.style}>\n\n        <CardMedia className={classes.media} image={image.src} title={image.title}/>\n\n        <CardContent>\n          <Typography variant={'title'}>{title}</Typography>\n        </CardContent>\n\n        <CardActions className={classes.actions} disableActionSpacing>\n\n          <IconButton aria-label=\"Добавить в избранное\">\n            <FavoriteIcon />\n          </IconButton>\n\n          <IconButton onClick={this.showShareModal.bind(this)} aria-label=\"Поделиться\">\n            <ShareIcon />\n          </IconButton>\n\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nconst EventCard = withStyles(({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  actions: {\n    display: 'flex',\n  }\n}))(PureEventCard);\n\nexport { EventCard };","export interface IEventCardImage {\n    src: string;\n    title: string;\n}\n\nexport class EventCardModel {\n    constructor(public image: IEventCardImage, public title: string) {\n        this.image = image;\n        this.title = title;\n    }\n}","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { EventCard } from '../EventCard/EventCard';\nimport { EventCardModel } from '../../Models/EventCardModel';\nimport EventsData from './EventsData.json';\n\ninterface IEventCardTileListProps {\n    mix?: string;\n}\n\nclass EventCardTileList extends Component<IEventCardTileListProps> {\n    render() {\n        return (\n            <>\n                <Grid container spacing={32} className={this.props.mix}>\n                    {\n                        EventsData.events.map((eventData, i) => {\n                            let eventCardModel = new EventCardModel(eventData.image, eventData.title);\n\n                            return (\n                                <Grid item xs={12} sm={4} md={3} key={i}>\n                                    <EventCard image={eventCardModel.image} title={eventCardModel.title} key={i} />\n                                </Grid>\n                            )\n                        })\n                    }\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport { EventCardTileList };","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IShareModalProps {\n    shareModalStore: {\n        open: boolean;\n    }\n    classes: any\n}\n\n@observer class PureShareModal extends Component<IShareModalProps> {\n    close() {\n        this.props.shareModalStore.open = false;\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Dialog\n                open={this.props.shareModalStore.open} \n                onClose={this.close.bind(this)}\n            >\n                <DialogTitle disableTypography className={classes.titleRoot}>\n                    <Typography variant=\"h6\">Расшарь, слыш?</Typography>\n                    <IconButton className={classes.closeButtonRoot} onClick={this.close.bind(this)}>\n                        <CloseIcon/>\n                    </IconButton>\n                </DialogTitle>\n\n                <DialogContent>\n                    <DialogContentText>\n                        Соц сеточка 1, соц сеточка2\n                        Соц сеточка 1, соц сеточка2\n                        Соц сеточка 1, соц сеточка2\n                        Соц сеточка 1, соц сеточка2\n                    </DialogContentText>\n                </DialogContent>\n\n            </Dialog>\n\n        )\n    }\n}\n\nconst ShareModal = withStyles(theme => ({\n    titleRoot: {\n        padding: theme.spacing.unit * 2,\n        margin: 0,\n        marginRight: 50\n    },\n    closeButtonRoot: {\n        position: 'absolute',\n        right: theme.spacing.unit,\n        top: theme.spacing.unit,\n        color: theme.palette.grey[500],\n    }\n}))(PureShareModal);\n\nexport { ShareModal };","import { observable, computed } from 'mobx';\n\nexport class ShareModalStore {\n    @observable private _isOpen: boolean = false;\n\n    set open(isOpen: boolean){\n        this._isOpen = isOpen;\n    }\n\n    @computed get open(): boolean {\n        return this._isOpen;\n    }\n}","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\ninterface IMainContent {\n    mix?: string;\n    classes: any;\n}\n\nclass PureMainContent extends Component<IMainContent> {\n    render() {\n        const { mix, classes, children } = this.props;\n        return (\n            <div className={`${mix} ${classes}`}>{children}</div>\n        );\n    }\n}\n\nconst MainContent = withStyles(theme => ({\n    root: {\n        ...theme.mixins.gutters()\n    }\n}))(PureMainContent);\n\nexport { MainContent };","import React, { Component } from 'react';\nimport './Footer.scss';\n\ninterface IFooter {\n    mix?: string;\n}\n\nclass Footer extends Component<IFooter> {\n    render() {\n        const { mix } = this.props;\n        return (<div className={`footer ${mix}`}></div>)\n    }\n}\n\nexport { Footer };","import React, { Component } from 'react';\nimport { Provider } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Header } from '../Header/Header';\nimport { EventCardTileList } from '../EventCardTileList/EventCardTileList';\nimport { ShareModal } from '../ShareModal/ShareModal';\nimport { ShareModalStore } from '../../Stores/ShareModalStore';\nimport { MainContent } from '../MainContent/MainContent';\nimport { Footer } from '../Footer/Footer';\n\nlet shareModalStore = new ShareModalStore();\n\ninterface IPageProps {\n  classes: any;\n}\n\nclass PurePage extends Component<IPageProps> {\n  render() {\n    var { classes } = this.props;\n\n    return (\n      <div className={classes.pageRoot}>\n        <Header/>\n        <MainContent mix={`${classes.layoutVertMargin} ${classes.layoutHorizMargin}`}>\n\n          <Provider shareModalStore={shareModalStore}>\n            <EventCardTileList />\n          </Provider>\n\n          <ShareModal shareModalStore={shareModalStore} />\n\n        </MainContent>\n\n        <Footer mix={classes.layoutVertMargin}/>\n      </div>\n    );\n  }\n}\n\nconst Page = withStyles(theme => ({\n  pageRoot: {\n    overflow: 'hidden'\n  },\n  layoutVertMargin: {\n    marginTop: '40px'\n  },\n  layoutHorizMargin: {\n    ...theme.mixins.gutters()\n  }\n}))(PurePage);\n\nexport { Page };\n","/* eslint no-console: 0 */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Page } from './Components/Page/Page';\nimport * as serviceWorker from './serviceWorker';\nimport MobxDevTools from 'mobx-react-devtools';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render((\n    <>\n        <Page />\n        <MobxDevTools />\n        <CssBaseline />\n    </>\n), document.getElementById('root'));\n        \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}